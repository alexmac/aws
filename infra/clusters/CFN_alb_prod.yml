AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template for creating an Application Load Balancer

Resources:
  PublicHTTPSAccess:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: public-https-access
      GroupDescription: Allow HTTPS inbound traffic
      Tags:
      - Key: Name
        Value: public-https-access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  CloudfrontHTTPSAccess:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: cloudfront-https-access
      GroupDescription: Allow HTTPS inbound traffic from Cloudfront
      Tags:
      - Key: Name
        Value: cloudfront-https-access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourcePrefixListId: pl-82a045eb # com.amazonaws.global.cloudfront.origin-facing
  ProdALBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: prod-alb-sg
      GroupDescription: Traffic from the prod SG
  ALBContainerIngress:
    # https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PortMapping.html
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: prod-alb-ingress
      GroupDescription: Allow ephemeral ports from ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 49153
          ToPort: 65535
          SourceSecurityGroupId: !GetAtt ProdALBSG.GroupId
  ALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: prod-alb
      Subnets:
      - subnet-0801881c6a15b7444
      - subnet-0ea4a492629ace35d
      - subnet-05c2105bfad11abf9
      - subnet-0f0d00b5fd6177225
      SecurityGroups:
      - !GetAtt CloudfrontHTTPSAccess.GroupId
      - !GetAtt ProdALBSG.GroupId
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '30'
      Type: application

  DefaultTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: prod-tg
      Port: 80
      Protocol: HTTP
      VpcId: vpc-01fff41067eddd5cf
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckPath: '/health'

  # DefaultListener:
  #   Type: 'AWS::ElasticLoadBalancingV2::Listener'
  #   Properties:
  #     DefaultActions:
  #       - Type: forward
  #         TargetGroupArn:
  #           Ref: DefaultTargetGroup
  #     LoadBalancerArn:
  #       Ref: ALB
  #     Port: 443
  #     Protocol: HTTPS
  #     SslPolicy: ELBSecurityPolicy-TLS13-1-2-2021-06
  #     Certificates:
  #       - CertificateArn: !Sub "arn:aws:acm:us-west-2:${AWS::AccountId}:certificate/c439b5cd-35d5-4052-a0f7-a09d7ebf3e0b"

Outputs:
  LoadBalancerDNSName:
    Description: DNS Name of the Load balancer
    Value:
      Fn::GetAtt:
        - ALB
        - DNSName
